"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.B1T6 = void 0;
// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0
/* eslint-disable no-bitwise */
/**
 * Class implements the b1t6 encoding encoding which uses a group of 6 trits to encode each byte.
 */
var B1T6 = /** @class */ (function () {
    function B1T6() {
    }
    /**
     * The encoded length of the data.
     * @param data The data.
     * @returns The encoded length.
     */
    B1T6.encodedLen = function (data) {
        return data.length * B1T6.TRITS_PER_TRYTE;
    };
    /**
     * Encode a byte array into trits.
     * @param dst The destination array.
     * @param startIndex The start index to write in the array.
     * @param src The source data.
     * @returns The length of the encode.
     */
    B1T6.encode = function (dst, startIndex, src) {
        var j = 0;
        for (var i = 0; i < src.length; i++) {
            var _a = B1T6.encodeGroup(src[i]), t1 = _a.t1, t2 = _a.t2;
            B1T6.storeTrits(dst, startIndex + j, t1);
            B1T6.storeTrits(dst, startIndex + j + B1T6.TRITS_PER_TRYTE, t2);
            j += 6;
        }
        return j;
    };
    /**
     * Encode a group to trits.
     * @param b The value to encode.
     * @returns The trit groups.
     * @internal
     */
    B1T6.encodeGroup = function (b) {
        var v = (b << 24 >> 24) + (B1T6.TRYTE_RADIX_HALF * B1T6.TRYTE_RADIX) + B1T6.TRYTE_RADIX_HALF;
        var quo = Math.trunc(v / 27);
        var rem = Math.trunc(v % 27);
        return {
            t1: rem + B1T6.MIN_TRYTE_VALUE,
            t2: quo + B1T6.MIN_TRYTE_VALUE
        };
    };
    /**
     * Store the trits in the dest array.
     * @param trits The trits array.
     * @param startIndex The start index in the array to write.
     * @param value The value to write.
     * @internal
     */
    B1T6.storeTrits = function (trits, startIndex, value) {
        var idx = value - B1T6.MIN_TRYTE_VALUE;
        trits[startIndex] = B1T6.TRYTE_VALUE_TO_TRITS[idx][0];
        trits[startIndex + 1] = B1T6.TRYTE_VALUE_TO_TRITS[idx][1];
        trits[startIndex + 2] = B1T6.TRYTE_VALUE_TO_TRITS[idx][2];
    };
    /**
     * Trytes to trits lookup table.
     * @internal
     */
    B1T6.TRYTE_VALUE_TO_TRITS = [
        [-1, -1, -1], [0, -1, -1], [1, -1, -1], [-1, 0, -1], [0, 0, -1], [1, 0, -1],
        [-1, 1, -1], [0, 1, -1], [1, 1, -1], [-1, -1, 0], [0, -1, 0], [1, -1, 0],
        [-1, 0, 0], [0, 0, 0], [1, 0, 0], [-1, 1, 0], [0, 1, 0], [1, 1, 0],
        [-1, -1, 1], [0, -1, 1], [1, -1, 1], [-1, 0, 1], [0, 0, 1], [1, 0, 1],
        [-1, 1, 1], [0, 1, 1], [1, 1, 1]
    ];
    /**
     * Minimum tryte value.
     * @internal
     */
    B1T6.MIN_TRYTE_VALUE = -13;
    /**
     * Radix for trytes.
     * @internal
     */
    B1T6.TRYTE_RADIX = 27;
    /**
     * Half radix for trytes to save recalculating.
     * @internal
     */
    B1T6.TRYTE_RADIX_HALF = 13;
    /**
     * Trites per tryte.
     * @internal
     */
    B1T6.TRITS_PER_TRYTE = 3;
    return B1T6;
}());
exports.B1T6 = B1T6;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjF0Ni5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbmNvZGluZy9iMXQ2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLCtCQUErQjtBQUMvQixzQ0FBc0M7QUFDdEMsK0JBQStCO0FBQy9COztHQUVHO0FBQ0g7SUFBQTtJQThGQSxDQUFDO0lBekRHOzs7O09BSUc7SUFDVyxlQUFVLEdBQXhCLFVBQXlCLElBQWdCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlDLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDVyxXQUFNLEdBQXBCLFVBQXFCLEdBQWMsRUFBRSxVQUFrQixFQUFFLEdBQWU7UUFDcEUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0IsSUFBQSxLQUFhLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQW5DLEVBQUUsUUFBQSxFQUFFLEVBQUUsUUFBNkIsQ0FBQztZQUM1QyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxVQUFVLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLFVBQVUsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLGVBQWUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNoRSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ1Y7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNZLGdCQUFXLEdBQTFCLFVBQTJCLENBQVM7UUFDaEMsSUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDL0YsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDL0IsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDL0IsT0FBTztZQUNILEVBQUUsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLGVBQWU7WUFDOUIsRUFBRSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsZUFBZTtTQUNqQyxDQUFDO0lBQ04sQ0FBQztJQUVEOzs7Ozs7T0FNRztJQUNZLGVBQVUsR0FBekIsVUFBMEIsS0FBZ0IsRUFBRSxVQUFrQixFQUFFLEtBQWE7UUFDekUsSUFBTSxHQUFHLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7UUFFekMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RCxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxRCxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBNUZEOzs7T0FHRztJQUNxQix5QkFBb0IsR0FBZTtRQUN2RCxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDeEUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3JFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ25DLENBQUM7SUFFRjs7O09BR0c7SUFDcUIsb0JBQWUsR0FBVyxDQUFDLEVBQUUsQ0FBQztJQUV0RDs7O09BR0c7SUFDcUIsZ0JBQVcsR0FBVyxFQUFFLENBQUM7SUFFakQ7OztPQUdHO0lBQ3FCLHFCQUFnQixHQUFXLEVBQUUsQ0FBQztJQUV0RDs7O09BR0c7SUFDcUIsb0JBQWUsR0FBVyxDQUFDLENBQUM7SUEyRHhELFdBQUM7Q0FBQSxBQTlGRCxJQThGQztBQTlGWSxvQkFBSSJ9